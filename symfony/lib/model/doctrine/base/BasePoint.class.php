<?php

/**
 * BasePoint
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $description
 * @property string $interaction_feedback
 * @property date $placed_date
 * @property float $longitude
 * @property float $latitude
 * @property float $altitude
 * @property float $X
 * @property float $Y
 * @property float $Z
 * @property integer $accuracy
 * @property integer $maxdistance
 * @property string $mime_type
 * @property string $model_uri
 * @property string $thumbnail_url
 * @property string $icon_url
 * @property string $phonenumber
 * @property string $email
 * @property string $homepage
 * @property string $local_name
 * @property string $line
 * 
 * @method integer getId()                   Returns the current record's "id" value
 * @method string  getName()                 Returns the current record's "name" value
 * @method string  getDescription()          Returns the current record's "description" value
 * @method string  getInteractionFeedback()  Returns the current record's "interaction_feedback" value
 * @method date    getPlacedDate()           Returns the current record's "placed_date" value
 * @method float   getLongitude()            Returns the current record's "longitude" value
 * @method float   getLatitude()             Returns the current record's "latitude" value
 * @method float   getAltitude()             Returns the current record's "altitude" value
 * @method float   getX()                    Returns the current record's "X" value
 * @method float   getY()                    Returns the current record's "Y" value
 * @method float   getZ()                    Returns the current record's "Z" value
 * @method integer getAccuracy()             Returns the current record's "accuracy" value
 * @method integer getMaxdistance()          Returns the current record's "maxdistance" value
 * @method string  getMimeType()             Returns the current record's "mime_type" value
 * @method string  getModelUri()             Returns the current record's "model_uri" value
 * @method string  getThumbnailUrl()         Returns the current record's "thumbnail_url" value
 * @method string  getIconUrl()              Returns the current record's "icon_url" value
 * @method string  getPhonenumber()          Returns the current record's "phonenumber" value
 * @method string  getEmail()                Returns the current record's "email" value
 * @method string  getHomepage()             Returns the current record's "homepage" value
 * @method string  getLocalName()            Returns the current record's "local_name" value
 * @method string  getLine()                 Returns the current record's "line" value
 * @method Point   setId()                   Sets the current record's "id" value
 * @method Point   setName()                 Sets the current record's "name" value
 * @method Point   setDescription()          Sets the current record's "description" value
 * @method Point   setInteractionFeedback()  Sets the current record's "interaction_feedback" value
 * @method Point   setPlacedDate()           Sets the current record's "placed_date" value
 * @method Point   setLongitude()            Sets the current record's "longitude" value
 * @method Point   setLatitude()             Sets the current record's "latitude" value
 * @method Point   setAltitude()             Sets the current record's "altitude" value
 * @method Point   setX()                    Sets the current record's "X" value
 * @method Point   setY()                    Sets the current record's "Y" value
 * @method Point   setZ()                    Sets the current record's "Z" value
 * @method Point   setAccuracy()             Sets the current record's "accuracy" value
 * @method Point   setMaxdistance()          Sets the current record's "maxdistance" value
 * @method Point   setMimeType()             Sets the current record's "mime_type" value
 * @method Point   setModelUri()             Sets the current record's "model_uri" value
 * @method Point   setThumbnailUrl()         Sets the current record's "thumbnail_url" value
 * @method Point   setIconUrl()              Sets the current record's "icon_url" value
 * @method Point   setPhonenumber()          Sets the current record's "phonenumber" value
 * @method Point   setEmail()                Sets the current record's "email" value
 * @method Point   setHomepage()             Sets the current record's "homepage" value
 * @method Point   setLocalName()            Sets the current record's "local_name" value
 * @method Point   setLine()                 Sets the current record's "line" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     SKiPP
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePoint extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('point');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('interaction_feedback', 'string', 255, array(
             'type' => 'string',
             'default' => 'none',
             'length' => 255,
             ));
        $this->hasColumn('placed_date', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('longitude', 'float', 18, array(
             'type' => 'float',
             'length' => 18,
             'scale' => '5',
             ));
        $this->hasColumn('latitude', 'float', 18, array(
             'type' => 'float',
             'length' => 18,
             'scale' => '5',
             ));
        $this->hasColumn('altitude', 'float', 18, array(
             'type' => 'float',
             'default' => 0,
             'length' => 18,
             'scale' => '5',
             ));
        $this->hasColumn('X', 'float', 18, array(
             'type' => 'float',
             'default' => 0,
             'length' => 18,
             'scale' => '5',
             ));
        $this->hasColumn('Y', 'float', 18, array(
             'type' => 'float',
             'default' => 0,
             'length' => 18,
             'scale' => '5',
             ));
        $this->hasColumn('Z', 'float', 18, array(
             'type' => 'float',
             'default' => 0,
             'length' => 18,
             'scale' => '5',
             ));
        $this->hasColumn('accuracy', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('maxdistance', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('mime_type', 'string', 255, array(
             'type' => 'string',
             'default' => 'text/plain',
             'length' => 255,
             ));
        $this->hasColumn('model_uri', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('thumbnail_url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('icon_url', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('phonenumber', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('homepage', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('local_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('line', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}